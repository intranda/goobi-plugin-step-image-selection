<!-- 
 * This file is part of a plugin for Goobi - a Workflow tool for the support of mass digitization.
 * 
 * Visit the websites for more information. 
 *          - https://goobi.io
 *          - https://www.intranda.com
 *          - https://github.com/intranda/goobi
 * 
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59
 * Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * 
 -->
<ui:composition xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" 
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:f="http://xmlns.jcp.org/jsf/core" 
    xmlns:o="http://omnifaces.org/ui" 
    xmlns:of="http://omnifaces.org/functions" 
    template="/uii/templatePG/templatePG.html"
    xmlns:x="http://myfaces.apache.org/tomahawk" 
    xmlns:intranda="http://xmlns.jcp.org/jsf/composite/compositesPG"
    xmlns:jsf="http://xmlns.jcp.org/jsf">

    <ui:param name="myPageTitle" value="#{msgs.plugin}: #{msgs[('plugin_').concat(AktuelleSchritteForm.myPlugin.title)]}" />

    <!-- BREADCRUMB -->
	<ui:define name="breadcrumb">
        <intranda:breadcrumb label="#{msgs.startseite}" action="index" navId="a0" />
        
        <c:if test="#{LoginForm.hasRole('Workflow_Processes') and NavigationForm.uiStatus.pluginSimulation == true}">
			<intranda:breadcrumb id="processAll" label="#{ProzessverwaltungForm.modusAnzeige=='aktuell'?msgs.aktuelleProzesse:msgs.prozessvorlagen}" action="process_all" navId="a1" />
			<intranda:breadcrumb id="processEdit" label="#{ProzessverwaltungForm.modusAnzeige=='aktuell'?msgs.prozessDetails:msgs.process_templateDetails}" action="process_edit" />
		</c:if>
        
        <c:if test="#{NavigationForm.uiStatus.pluginSimulation != true}">
		    <intranda:breadcrumb label="#{msgs.aktuelleSchritte}" action="#{AktuelleSchritteForm.paginator.returnToPreviousPage}" />
    	   	<intranda:breadcrumb label="#{AktuelleSchritteForm.mySchritt.prozess.titel}" action="#{AktuelleSchritteForm.myPlugin.cancel}" />
		</c:if>
        
        <intranda:breadcrumb label="#{myPageTitle}" noSeparator="#{true}" />
    </ui:define>
    <!-- // BREADCRUMB -->

    <ui:define name="info">
    </ui:define>

    <ui:define name="content">

<style>
/* Thumbnails */
.goobi-thumbnail {
    float: left;
    margin: 7px;
    width: #{AktuelleSchritteForm.myPlugin.thumbnailSize +2}px;
    height: #{AktuelleSchritteForm.myPlugin.thumbnailSize + 55}px;
}
.goobi-thumbnail .goobi-thumbnail-image {
    float: left;
    width: 100%;
    min-height: 100px;
    overflow: hidden;
    max-height: #{AktuelleSchritteForm.myPlugin.thumbnailSize +2}px;
}
.selected-canvas-buttons {
	display: none;
}
</style>
    
    
    <script src="#{HelperForm.applicationWebsiteUrl}/uii/template/js/imageView.min.js"></script>
    
        <h:form id="myform">
        
        <!-- ROW -->
        <div class="row">
        
            <!-- BOX FOR ALL AVAILABLE IMAGES -->
            <div class="col-9 column-left">
 
                 <intranda:box
                    boxType="neutral"
                    boxTitle="false"
                    boxForm="false">
                
                    <intranda:boxTitle
                        title="#{msgs.plugin_intranda_step_image_selection_availableImages}"
                        icon="fa-puzzle-piece">
                
                        <div class="actions d-flex">
                            <button
                                jsf:id="buttonInBoxTitle"
                                class="btn d-flex align-items-center btn--title-action"
                                jsf:rel="tooltip"
                                jsf:action="#{NavigationForm.Reload}"
                                title="#{msgs.reload}">
                                <i class="fa fa-refresh"></i>
                            </button>
                        </div>
                    </intranda:boxTitle>
                
                    <div class="p-4">
                        <!-- CONTENT AREA -->
                        <div
                            class="box-content row flex-container"
                            id="images-loaded-list"
                            ondrop="dropToLoaded(event)"
                            ondragover="allowDropToLoaded(event)">
                
                            <!-- AVAILABLE IMAGES -->
                            <ui:repeat
                                var="image"
                                varStatus="status"
                                value="#{AktuelleSchritteForm.myPlugin.imagesToShow}">
                                
                                <div
                                    id="loaded-thumnail-#{status.index}"
                                    class="goobi-thumbnail loaded-item"
                                    dir="auto"
                                    draggable="true"
                                    ondragstart="dragFromLoaded(event)">
                                    <div class="goobi-thumbnail-image">
                
                                        <div class="thumb text-center">
                                            <ui:fragment rendered="#{image.type == 'image'}">
                                                <canvas
                                                    class="thumb-canvas"
                                                    data-image_small="#{image.thumbnailUrl}"
                                                    data-image_large="#{image.largeThumbnailUrl}"
                                                    title="#{image.tooltip}"
                                                    id="thumnail-#{status.index}">
                                                    </canvas>
                                            </ui:fragment>
                
                                              <!-- PLACEHOLDER -->
                                            <ui:fragment
                                                rendered="#{image.type != 'image'}">
                                                <img
                                                    class="thumbnails__thumb-placeholder"
                                                    src="#{HelperForm.servletPathWithHostAsUrl}/uii/template/img/thumbnail-placeholder.png" />
                                            </ui:fragment>
                
                                        </div>
                
                                    </div>
                                    <div class="goobi-thumbnail-caption text-center font-light">
                                        <h:outputText value="#{image.imageName}" />
                                    </div>
                                </div>
                            </ui:repeat>
                            <!-- // AVAILABLE IMAGES -->
                
                        </div>
                        <!-- // CONTENT AREA -->
                    </div>
                
                </intranda:box>
            </div>
            <!-- // BOX FOR ALL AVAILABLE IMAGES -->
            
            
            <!-- BOX FOR SELECTED IMAGES -->
            <div class="col-3">
                <intranda:box
                    boxType="action"
                    boxPadding="true"
                    icon="fa-puzzle-piece"
                    title="#{msgs.plugin_intranda_step_image_selection_selectedImages}">
                    
                    <!-- CONTENT AREA -->
                    <div
                        style="width: 100%; min-height:100px; border:2px dashed silver;"
                        class="box-content row m-auto"
                        id="images-selected-list"
                        ondrop="dropToSelected(event)"
                        ondragover="allowDropToSelected(event)">
                        
                        <!-- SELECTED IMAGES -->
                        <ui:repeat
                            var="image"
                            varStatus="status"
                            value="#{AktuelleSchritteForm.myPlugin.imagesSelected}">
                            <div
                                id="selected-thumbnail-#{status.index}"
                                class="goobi-thumbnail selected-item"
                                dir="auto"
                                draggable="true"
                                ondragstart="dragFromSelected(event)"
                                ondragend="dragEndFromSelected(event)">
                                <div class="goobi-thumbnail-image text-center">
    
                                    <div class="thumb">
                                        <ui:fragment rendered="#{image.type == 'image'}">
	                                        <canvas
	                                            class="thumb-canvas"
	                                            data-image_small="#{image.thumbnailUrl}"
	                                            data-image_large="#{image.largeThumbnailUrl}"
	                                            title="#{image.tooltip}"
	                                            id="thumbnail-#{status.index}" />
	                                        <!-- HIDDEN BUTTON TO MOVE THE CLICKED CANVAS IMAGE UPWARDS BY ONE -->
	                                        <button
	                                           id="move-upwards-button-#{status.index}"
	                                           class="selected-canvas-buttons"
	                                           jsf:rel="tooltip"
	                                           jsf:action="#{AktuelleSchritteForm.myPlugin.moveUpwards(status.index)}" />
	                                        <!-- HIDDEN BUTTON TO MOVE THE CLICKED CANVAS IMAGE DOWNWARDS BY ONE -->
	                                        <button
	                                           id="move-downwards-button-#{status.index}"
	                                           class="selected-canvas-buttons"
	                                           jsf:rel="tooltip"
	                                           jsf:action="#{AktuelleSchritteForm.myPlugin.moveDownwards(status.index)}" />                                 
                                        </ui:fragment>
    
                                        <!-- PLACEHOLDER -->
                                        <ui:fragment
                                            rendered="#{image.type != 'image'}">
                                            <img
                                                class="thumbnails__thumb-placeholder"
                                                src="#{HelperForm.servletPathWithHostAsUrl}/uii/template/img/thumbnail-placeholder.png" />
                                        </ui:fragment>
                                    </div>
    
                                </div>
                                <div class="goobi-thumbnail-caption text-center font-light">
                                    <h:outputText value="#{image.imageName}" />
                                </div>
                            </div>
                            
                            <script>
                            $( document ).ready(function() {
                                $("#thumbnail-#{status.index}").click(function(e){
                             	   var pHeight = $(this).innerHeight();
                             	   var pOffset = $(this).offset();
                             	   var y = e.pageY - pOffset.top;
                             	    if(pHeight / 2 > y){
                             	    	// click event happens on the top half of the image
                                	    $("#move-upwards-button-#{status.index}").trigger("click");
                             	    } else {
                             	    	// click event happens on the bottom half of the image
                             	    	$("#move-downwards-button-#{status.index}").trigger("click");
                             	    }                         	      
                             	});
                                
                                // the cursors below should be modified to make more sense
                                $("#thumbnail-#{status.index}").mousemove(function(e){
                              	   var pHeight = $(this).innerHeight();
                             	   var pOffset = $(this).offset();
                             	   var y = e.pageY - pOffset.top;
                             	    if(pHeight / 2 > y){
                             	    	// mousemove event happens on the top half of the image
                             	    	$(".thumb").css("cursor", "pointer");
                             	    } else {
                             	    	// mousemove event happens on the bottom half of the image
                             	    	$(".thumb").css("cursor", "crosshair");
                             	    }  
                                 });
                                
                                $("#thumbnail-#{status.index}").mouseout(function(e){
                                	$(".thumb").css("cursor", "grab");
                                 });
                            });
                            </script>
    
                        </ui:repeat>
                        <!-- // SELECTED IMAGES -->
    
                    </div>
                    <!-- // CONTENT AREA -->
                    
                    <!-- BUTTONS -->
                    <div class="form-actions">
    
                        <!-- BUTTON TO SAVE PROPERTY -->
                        <button class="btn btn-success float-end"
                            jsf:id="save-property-button"
                            jsf:action="#{AktuelleSchritteForm.myPlugin.saveAsProperty}">
                            <i class="fa fa-save"></i>
                            <span>
                                <h:outputText value="#{msgs.save}" />
                            </span>
                            <x:updateActionListener
                                property="#{NavigationForm.uiStatus.pluginSimulation}"
                                value="#{false}" />
                        </button>
                        <!-- // BUTTON TO SAVE PROPERTY -->
    
                        <!-- LEAVE PLUGIN -->
                        <button
                            class="btn btn-neutral-600"
                            jsf:id="absenden"
                            jsf:action="#{AktuelleSchritteForm.myPlugin.cancel}">
                            <span>
                                <h:outputText value="#{msgs.pluginLeave}" />
                            </span>
                            <x:updateActionListener
                                property="#{NavigationForm.uiStatus.pluginSimulation}"
                                value="#{false}" />
                        </button>
                        <!-- // LEAVE PLUGIN -->
                    
    
                    </div>
                    <!-- // BUTTONS -->
                    
                </intranda:box>
            </div>
            <!-- // BOX FOR SELECTED IMAGES -->
            
        </div>
        <!-- // ROW -->

        </h:form>

        <h:form id="hidden-form" style="visibility:hidden;">
            <!-- INPUT FOR THE INDEX OF THE DRAGGED IMAGE AMONG ITS SOURCE LIST -->
            <h:inputHidden id="dragged-index" value="#{AktuelleSchritteForm.myPlugin.draggedIndex}" />
            <!-- INPUT FOR THE TARGETED INDEX WHERE THE DRAGGED IMAGE IS DROPPED -->
            <h:inputHidden id="index-to-put" value="#{AktuelleSchritteForm.myPlugin.indexToPut}" />
            
            <!-- THE TOTAL NUMBER OF ALL AVAILABLE IMAGES -->
            <h:outputText id="available-images-number" value="#{AktuelleSchritteForm.myPlugin.numberOfImages}" />       
                        
            <!-- BUTTON TO ADD A NEW IMAGE TO SELECTED -->
            <h:commandButton id="select-image-button" value="Select" action="#{AktuelleSchritteForm.myPlugin.selectImage}" />                  
            <!-- BUTTON TO DESELECT AN IMAGE FROM THE SELECTED -->
            <h:commandButton id="deselect-image-button" value="Deselect" action="#{AktuelleSchritteForm.myPlugin.deselectImage}" />           
            <!-- BUTTON TO CHANGE THE POSITION OF A SELECTED IMAGE -->
            <h:commandButton id="reorder-selected-button" value="Reorder" action="#{AktuelleSchritteForm.myPlugin.reorderSelected}" />    
            
            <!-- BUTTON TO LOAD MORE IMAGES, TRIGGERED WHEN WINDOW IS SCROLLED TO THE BOTTOM -->
            <h:commandButton id="load-more-button" value="Load More" action="#{AktuelleSchritteForm.myPlugin.loadMoreImages}">
                <f:ajax render="myform" ></f:ajax>
            </h:commandButton>
            <!-- // BUTTON TO LOAD MORE IMAGES -->
        </h:form>
        
        <script type="text/javascript">
        //<![CDATA[
        	
        	/* hidden input to save the index of the dragged image among its source list */
        	var draggedIndexElement = document.getElementById("hidden-form:dragged-index");
        	/* hidden input to save the targeted index of the to-be-dropped image among the list of all selected */
        	var indexToPutElement = document.getElementById("hidden-form:index-to-put");
        	
        	/* the total number of all available images */
        	const availableImagesNumber = document.getElementById("hidden-form:available-images-number").textContent;
        	        	
        	/* button to select a new image from the loaded to the selected */
         	var selectImageButton = document.getElementById("hidden-form:select-image-button");
        	/* button to deselect an image from the selected */
        	var deselectImageButton = document.getElementById("hidden-form:deselect-image-button"); 
        	/* button to change the position of a selected image */
        	var reorderSelectedButton = document.getElementById("hidden-form:reorder-selected-button");
        	
        	/* button to load more images */
        	var loadMoreButton = document.getElementById("hidden-form:load-more-button");
        
        	/* button to save the selected images as process property in the format of JSON */
        	var savePropertyButton = document.getElementById("myform:save-property-button");

        	/* the list of all selected images, used for reordering via drag & drop */
        	var sortableList = document.getElementById("images-selected-list");
        	
        	/* the list of all loaded images, used for checking if it is still able to load more */
        	var loadedList = document.getElementById("images-loaded-list");
        	
        	/* used to control whether the bottom of the page is hit */
         	var oldScrollY = window.scrollY;
        	        
            window.onload = function() {
                loadImages();
            }
        
            $( document ).ready(function() {             
                loadThumbnails();
            });
        
            /* needed to keep the images' sizes unchanged */
             jsf.ajax.addOnEvent((data) => {
                var ajaxstatus = data.status; // Can be "begin", "complete" and "success"
                switch (ajaxstatus) {
                    case "success": // This is called when ajax response is successfully processed.
                        loadImages();
                        loadThumbnails();
                        // reinitialize the list to enable drag & drop
                        sortableList = document.getElementById("images-selected-list");
                        // reinitialize the list to assure that the availability check of more images holds
                        loadedList = document.getElementById("images-loaded-list");
                        // scroll back to prevent a continuously triggered automatic loading
                        window.scroll(0, oldScrollY);
                        break;
                    }
            });
                     
            window.onscroll = () => {                 	
            	var isScrollingDown = false;
            	// check if it is scrolling down
            	if (oldScrollY < window.scrollY){
            		isScrollingDown = true;
            	} else {
            		isScrollingDown = false;
            	}
            	oldScrollY = window.scrollY;
            	
            	// check if it is scrolling down and the bottom is already hit
            	if (isScrollingDown && $(window).scrollTop() + $(window).height() == $(document).height()){
            		// load more images ONLY IF there are still some available
            		let loadedImages = [...loadedList.querySelectorAll(".loaded-item")];            		
            		let moreImagesAvailable = loadedImages.length < availableImagesNumber;
            		
            		if (moreImagesAvailable){
            			loadMoreButton.click();
            		}            		
            	}
            };
            
            /* ======= FUNCTIONS ======= */
            function loadThumbnails() {
                var height = parseInt('#{AktuelleSchritteForm.myPlugin.thumbnailSize}');
                if (height) {
                    $('.goobi-thumbnail-image').css('height', (height + 25) + 'px');
                    $('.goobi-thumbnail-image .thumb').css('max-height', height + 'px');
                    $('.goobi-thumbnail-image .thumb canvas').css('max-height', height + 'px');
                    
                    // make the first selected image bigger
                    $('#selected-thumbnail-0 .goobi-thumbnail-image').css('height', '120%');
                    $('#selected-thumbnail-0 .goobi-thumbnail-image').css('width', '120%');
                    $('#selected-thumbnail-0 .goobi-thumbnail-image').css('max-height', (height + 50) + 'px');             
                    $('#selected-thumbnail-0 .goobi-thumbnail-image .thumb canvas').css('max-height', (height + 50) + 'px');                    
                    
                    // reset the bottom padding of the div containing the first selected image
                    $('#selected-thumbnail-0').css('margin-bottom', '50px');
                    
                    // assure that the selected images are listed in one column, since otherwise drag & drop for sorting won't work
                    $('.column-right').css('width', (height * 1.3) + 'px');
                    $('.column-right').css('float', 'right');
                    
                    // set mouse cursors
                    $(".thumb").css("cursor", "grab");
                }
            }
            
            /* listener to the dragover event that happens on the images-loaded-list */
            function allowDropToLoaded(ev){
            	ev.preventDefault();
            }
            
            /* listener to the dragover event that happens on the images-selected-list */
            function allowDropToSelected(ev){
            	ev.preventDefault();
            	            	
        		const draggingItem = document.querySelector(".dragging-selected");
        		
        		// get all items except currently dragging and making array of them 
        		let siblings = [...sortableList.querySelectorAll(".selected-item:not(.dragging-selected)")];
        		      		
        		// find the sibling after which the dragging item should be placed
        		let nextSibling = siblings.find(sibling => {
        			return ev.clientY < sibling.getBoundingClientRect().bottom;
        		});
        		
        		// if nextSibling is undefined, then it means that no element comes after the being-dragged one, 
        		// therefore it should be appended to the end of the list
        		let isInsertBefore = true;
        		        		
        		if (typeof nextSibling != "undefined"){
        			let idString = nextSibling.id;
        			let id = idString.split("-")[2];
        			indexToPutElement.value = id;
        		} else {
        			isInsertBefore = false;
        			indexToPutElement.value = -1;
        		}
	            
        		// check if the being-dragged item is already selected or not
        		if (draggingItem != null){
        			if (isInsertBefore){
        				// insert the dragging item before the found sibling
        				sortableList.insertBefore(draggingItem, nextSibling);
        			} else {
        				// append the item to the end of the list
        				sortableList.appendChild(draggingItem);
        			}			
        		}  		
            }
            
            /* listener to the dragstart event that happens on any image from the images-loaded-list */
            function dragFromLoaded(ev){
            	$(".thumb").css("cursor", "grabbing");
            	ev.dataTransfer.setData("text/plain", ev.target.id);
            	console.log("drag from loaded with event id = " + ev.target.id);
            }
            
            /* listener to the dragstart event that happens on any image from the images-selected-list */
            function dragFromSelected(ev){
            	//console.log("adding the class dragging-selected");
            	$(".thumb").css("cursor", "grabbing");
            	ev.target.classList.add("dragging-selected");
            	ev.dataTransfer.setData("text/plain", ev.target.id);
            	console.log("drag from selected with event id = " + ev.target.id);
            }
            
            /* listener to the dragend event that happens on any image from the images-selected-list */
            function dragEndFromSelected(ev){
            	//console.log("removing the class dragging-selected");
            	$(".thumb").css("cursor", "grab");
            	ev.target.classList.remove("dragging-selected");
            }
            
            /* listener to the drop event that happens on the images-loaded-list */
            function dropToLoaded(ev) {
            	$(".thumb").css("cursor", "grab");
            	ev.preventDefault();
            	var data = ev.dataTransfer.getData("text/plain");
            	var chunks = data.split("-");
            	var source = chunks[0];
            	var index = chunks[2];
            	if (source == "selected"){
            		 console.log("deselecting image with index " + index);     		 
            		 draggedIndexElement.value = index;
            		 deselectImageButton.click();
            	} else{
            		console.log("NOTHING HAPPENS");
            	}
            }
            
            /* listener to the drop event that happens on the images-selected-list */
            function dropToSelected(ev){
            	$(".thumb").css("cursor", "grab");
            	ev.preventDefault();
            	var data = ev.dataTransfer.getData("text/plain");
            	var chunks = data.split("-");
            	var source = chunks[0];
            	var index = chunks[2];
            	draggedIndexElement.value = index;
            	if (source == "loaded"){
            		console.log("adding new image with index " + index);
            		selectImageButton.click();
            	} else {
            		console.log("reordering selected image with index " + index);
            		reorderSelectedButton.click();
            	}
            }
            
        //]]>
        </script>
    
    </ui:define>

</ui:composition>